int spanningTree(int V, vector<vector<int>> adj[])
    {
        // code here

       
        vector<pair<int,int>>parent;
        vector<int>vis(V,0);
        priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>>q;
        q.push({0,{0,-1}});
        int sum=0;
        while(!q.empty()){
            int n=q.top().second.first;
            int d=q.top().first;
            int p=q.top().second.second;
            q.pop();
            if(vis[n]==1)continue;
             if(p!=-1)parent.push_back({n,p});
           if(vis[n]==0) sum+=d;
            
            vis[n]=1;
            for(auto u:adj[n]){
                if(vis[u[0]]==0){
                    q.push({u[1],{u[0],n}});
                }
            }
        }
        for(auto u:parent)cout<<u.first<<" "<<u.second<<endl; 
        return sum;
